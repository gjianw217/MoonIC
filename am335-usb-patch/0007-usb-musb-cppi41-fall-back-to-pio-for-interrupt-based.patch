From ab4e20d5b1962d88b6c76abfea00ad3b656eb75f Mon Sep 17 00:00:00 2001
From: ayaka <ayaka@soulik.info>
Date: Mon, 2 May 2016 12:41:53 +0800
Subject: [PATCH 07/11] usb: musb: cppi41: fall back to pio for interrupt based
 transfers

System hang is observed as Tx FIFO is never empty for interrupt based transfer
and so system goes into loop checking for txFifo empty.

Fixing by using pio for such transfer where length is less than 128 bytes

This patch is merged by hand.
---
 drivers/usb/musb/cppi41_dma.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/musb/cppi41_dma.c b/drivers/usb/musb/cppi41_dma.c
index 9783b18..9092926 100644
--- a/drivers/usb/musb/cppi41_dma.c
+++ b/drivers/usb/musb/cppi41_dma.c
@@ -99,6 +99,7 @@ struct cppi41_channel {
 	u8  zlp_queued;
 	u8  inf_mode;
 	u8  tx_complete;
+	u8  count;
 };
 
 /**
@@ -1304,10 +1305,17 @@ void txdma_completion_work(struct work_struct *data)
 				epio = tx_ch->end_pt->regs;
 				csr = musb_readw(epio, MUSB_TXCSR);
 
-				if (csr & (MUSB_TXCSR_TXPKTRDY |
-					MUSB_TXCSR_FIFONOTEMPTY)) {
+				if ((tx_ch->length > 128) &&
+					(csr & (MUSB_TXCSR_TXPKTRDY |
+					MUSB_TXCSR_FIFONOTEMPTY))) {
 					resched = 1;
 				} else {
+					if (tx_ch->length < 128 &&
+							tx_ch->count > 0) {
+						tx_ch->count--;
+						resched = 1;
+						continue;
+					}
 					tx_ch->channel.status =
 							MUSB_DMA_STATUS_FREE;
 					tx_ch->tx_complete = 0;
@@ -1431,6 +1439,7 @@ static void usb_process_tx_queue(struct cppi41 *cppi, unsigned index)
 			 * failure with iperf.
 			 */
 			tx_ch->tx_complete = 1;
+			tx_ch->count = 1;
 			schedule_work(&cppi->txdma_work);
 		}
 	}
-- 
2.5.5

